require('dotenv').config()
const TelegramApi = require('node-telegram-bot-api')
const { token } = process.env
// –ù–∞—Å—Ç—Ä–æ–∏–º —Ç–∞–π–º-–∞—É—Ç –Ω–∞ 30 —Å–µ–∫—É–Ω–¥ (30000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥)
const bot = new TelegramApi(token, {
	polling: true,
	request: {
		timeout: 30000, // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º-–∞—É—Ç–∞
	},
})
const retryRequest = async (fn, retries = 5, delay = 1000) => {
	let attempt = 0
	while (attempt < retries) {
		try {
			return await fn()
		} catch (error) {
			attempt++
			if (attempt >= retries) throw error
			await new Promise(resolve => setTimeout(resolve, delay))
		}
	}
}
const { recipientChatIds } = process.env
const userStates = {} // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const uniqueUsers = new Set() // –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

bot.setMyCommands([
	{ command: '/start', description: '–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞' },
	{ command: '/info', description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' },
	{ command: '/question', description: '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å' },
	{ command: '/buy', description: '–ö—É–ø–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω' },
])

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
async function sendKeyboard(chatId, message, keyboard) {
	await bot.sendMessage(chatId, message, {
		reply_markup: { keyboard, resize_keyboard: true },
	})
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥ –∏ —à–∞–≥–æ–≤
async function initSteps(chatId) {
	const commandList = [
		{ command: '/buy', description: '–ö—É–ø–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω' },
		{ command: '/info', description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' },
		{ command: '/question', description: '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å' },
	]

	const commandString = commandList
		.map(cmd => `üí• <b>${cmd.command}</b>: <b>${cmd.description}</b>`)
		.join('\n\n')

	await bot.sendSticker(
		chatId,
		'https://cdn2.combot.org/privet702/webp/10xf09f929f.webp'
	)
	await bot.sendMessage(
		chatId,
		`<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤!</b>\n\n${commandString}`,
		{ parse_mode: 'HTML' }
	)
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞–≥–æ–≤
const steps = {
	'/start': async chatId => await initSteps(chatId),
	'/info': async chatId => {
		await bot.sendMessage(
			chatId,
			`<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!</b>\n\n` +
				`–ú—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø—Ä–æ–¥–∞–∂–µ –º–æ–±–∏–ª—å–Ω—ã—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –º–Ω–æ–≥–æ —É–¥–æ–±—Å—Ç–≤ –¥–ª—è –ª–µ–≥–∫–æ–≥–æ –∏ –±—ã—Å—Ç—Ä–æ–≥–æ —à–æ–ø–∏–Ω–≥–∞. üòÑ\n\n` +
				`<b>–ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:</b>\n` +
				`‚Ä¢ –®–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –º–æ–±–∏–ª—å–Ω—ã—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤: –æ—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–æ –Ω–æ–≤–∏–Ω–æ–∫ üì±\n` +
				`‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –≤—ã–±–æ—Ä–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –º–æ–¥–µ–ª–∏ –¥–ª—è –≤–∞—à–∏—Ö –Ω—É–∂–¥ üßê\n` +
				`‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—ã–π –æ–±—ä–µ–º –ø–∞–º—è—Ç–∏, —Ü–≤–µ—Ç –∏ –≤–µ—Ä—Å–∏—é üì¶\n` +
				`‚Ä¢ –ü–æ–∂–∏–∑–Ω–µ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ üõ†Ô∏è\n` +
				`‚Ä¢ –£–¥–æ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏ –æ–±–º–µ–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤ üíØ\n` +
				`‚Ä¢ –ü—Ä–æ—Å—Ç–∞—è –∏ –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä—è–º–æ –∫ –≤–∞–º –¥–æ–º–æ–π üöö\n` +
				`‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∞–∫—Ü–∏–∏, —Å–∫–∏–¥–∫–∏ –∏ –±–æ–Ω—É—Å—ã –¥–ª—è –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üéâ\n\n` +
				`<b>–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –≤—ã–±—Ä–∞—Ç—å –Ω–∞—Å?</b>\n` +
				`‚Ä¢ –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã.\n` +
				`‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö –ø–æ–∫—É–ø–∫–∏ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏.\n` +
				`‚Ä¢ –£–¥–æ–±–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–∫–∞–∑–∞.\n` +
				`‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –Ω–æ–≤–∏–Ω–∫–∏ –∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.\n\n` +
				`<i>–ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –º—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!</i>`,
			{ parse_mode: 'HTML' }
		)
	},
	'/question': async chatId => {
		// –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ chatId —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –æ–±—ä–µ–∫—Ç userStates
		if (!userStates[chatId]) {
			userStates[chatId] = {} // –ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
		}

		// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞–≥, —á—Ç–æ–±—ã –±–æ—Ç –∑–Ω–∞–ª, —á—Ç–æ –º—ã –æ–∂–∏–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å
		userStates[chatId].step = 'waitingForQuestion'

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
		await bot.sendMessage(
			chatId,
			`‚ùì <b>–£ –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å? –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!</b>\n\n` +
				`–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ—Å—Ç–∞—Ä–∞–µ—Ç—Å—è –¥–∞—Ç—å –Ω–∞ –Ω–µ–≥–æ –ø–æ–¥—Ä–æ–±–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç. üí¨\n\n` +
				`–ú—ã —Ü–µ–Ω–∏–º –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Ö–æ—Ç–∏–º, —á—Ç–æ–±—ã –≤–∞—à –æ–ø—ã—Ç —Å –Ω–∞–º–∏ –±—ã–ª –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏—è—Ç–Ω—ã–º. üèÜ`,
			{ parse_mode: 'HTML' }
		)

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å
		await bot.sendMessage(
			chatId,
			`–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –Ω–∏–∂–µ, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ–≥–æ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!`
		)
	},

	'/buy': async chatId => {
		userStates[chatId] = { step: 'chooseModel' } // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à–∞–≥–∞
		await sendKeyboard(chatId, '–í—ã–±–∏—Ä–∞–π –º–æ–¥–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞:', [
			['‚≠êÔ∏è iphone 11', '‚≠êÔ∏è iphone 12'],
			['‚≠êÔ∏è iphone 13', '‚≠êÔ∏è iphone 14'],
			['‚≠êÔ∏è iphone 15', '‚≠êÔ∏è iphone 16'],
			['‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é'],
		])
	},
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async msg => {
	const { text, chat } = msg
	const chatId = chat.id

	uniqueUsers.add(chatId) // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	console.log(
		`\n=========================================\n` +
			`üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${uniqueUsers.size}\n` +
			`=========================================\n`
	) // –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

	// –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ /start –∏–ª–∏ –¥—Ä—É–≥–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
	if (steps[text]) {
		return steps[text](chatId)
	}

	const step = userStates[chatId]?.step
	if (step) {
		await handleUserChoice(chatId, text, step)
	}
})

async function handleUserChoice(chatId, text, step) {
	const modelsMap = {
		'‚≠êÔ∏è iphone 11': 'iphone 11',
		'‚≠êÔ∏è iphone 12': 'iphone 12',
		'‚≠êÔ∏è iphone 13': 'iphone 13',
		'‚≠êÔ∏è iphone 14': 'iphone 14',
		'‚≠êÔ∏è iphone 15': 'iphone 15',
		'‚≠êÔ∏è iphone 16': 'iphone 16',
	}

	if (step === 'chooseModel') {
		if (modelsMap[text]) {
			userStates[chatId].model = modelsMap[text]
			userStates[chatId].step = 'chooseVersion'
			await sendKeyboard(
				chatId,
				`–í—ã –≤—ã–±—Ä–∞–ª–∏ –º–æ–¥–µ–ª—å: ${text}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é:`,
				[
					[`${text} Pro`, `${text} Pro Max`, `${text} Mini`, `${text}`],
					['üîô –ù–∞–∑–∞–¥'],
				]
			)
		} else if (text === '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é') {
			await bot.sendMessage(chatId, '–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ.')
		} else {
			await bot.sendMessage(
				chatId,
				'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.'
			)
		}
	}

	if (step === 'chooseVersion') {
		if (text === 'üîô –ù–∞–∑–∞–¥') {
			userStates[chatId].step = 'chooseModel' // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ —à–∞–≥—É –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
			await sendKeyboard(chatId, '–í—ã–±–∏—Ä–∞–π—Ç–µ –º–æ–¥–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞:', [
				['‚≠êÔ∏è iphone 11', '‚≠êÔ∏è iphone 12'],
				['‚≠êÔ∏è iphone 13', '‚≠êÔ∏è iphone 14'],
				['‚≠êÔ∏è iphone 15', '‚≠êÔ∏è iphone 16'],
				['‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é'],
			])
		} else {
			// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–µ—Ä—Å–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ priceList
			const versionKey = text.replace(/^‚≠êÔ∏è /, '').trim()
			userStates[chatId].version = versionKey
			userStates[chatId].step = 'chooseCapacity'
			await sendKeyboard(
				chatId,
				`–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–µ—Ä—Å–∏—é: ${versionKey}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–º –ø–∞–º—è—Ç–∏:`,
				[['64 GB', '128 GB', '256 GB', '512 GB', '1 TB'], ['–ù–∞–∑–∞–¥']]
			)
		}
	}

	if (step === 'chooseCapacity') {
		if (text === 'üîô –ù–∞–∑–∞–¥') {
			userStates[chatId].step = 'chooseVersion' // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ —à–∞–≥—É –≤—ã–±–æ—Ä–∞ –≤–µ—Ä—Å–∏–∏
			await sendKeyboard(chatId, `–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é:`, [
				[
					`${userStates[chatId].model} Pro`,
					`${userStates[chatId].model} Pro Max`,
					`${userStates[chatId].model} Mini`,
					`${userStates[chatId].model}`,
				],
				['üîô –ù–∞–∑–∞–¥'],
			])
		} else {
			userStates[chatId].capacity = text
			userStates[chatId].step = 'chooseColor'

			// –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ —Ü–≤–µ—Ç –≤—Ä—É—á–Ω—É—é
			await bot.sendMessage(
				chatId,
				`–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–±—ä–µ–º –ø–∞–º—è—Ç–∏: ${text}. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ü–≤–µ—Ç –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ "–£–∫–∞–∂—É –ø–æ–∑–∂–µ", –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å —Ü–≤–µ—Ç –ø–æ–∑–∂–µ.`,
				{ reply_markup: { remove_keyboard: true } } // –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
			)
		}
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é"
	if (text === '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é') {
		// –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		delete userStates[chatId]
		await bot.sendMessage(
			chatId,
			'–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏—Ç–µ "–ú–µ–Ω—é".',
			{
				reply_markup: {
					remove_keyboard: true, // –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
				},
			}
		)
		return // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞
	if (step === 'chooseColor') {
		if (text === 'üîô –ù–∞–∑–∞–¥') {
			userStates[chatId].step = 'chooseCapacity' // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ —à–∞–≥—É –≤—ã–±–æ—Ä–∞ –æ–±—ä–µ–º–∞ –ø–∞–º—è—Ç–∏
			await sendKeyboard(chatId, `–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–º –ø–∞–º—è—Ç–∏:`, [
				['64 GB', '128 GB', '256 GB', '512 GB'],
				['üîô –ù–∞–∑–∞–¥'],
			])
		} else {
			// –ü—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
			userStates[chatId].color = text
			const { model, version, capacity } = userStates[chatId]

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞
			const resultMessage = `
            –í–∞—à –∑–∞–∫–∞–∑:
            –í–µ—Ä—Å–∏—è: ${version}
            –û–±—ä–µ–º –ø–∞–º—è—Ç–∏: ${capacity}
            –¶–≤–µ—Ç: ${text}
        `

			// –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
			await bot.sendMessage(chatId, `${resultMessage}\n\n–í—Å–µ –≤–µ—Ä–Ω–æ?`, {
				reply_markup: {
					inline_keyboard: [
						[{ text: '–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ', callback_data: 'confirm_order' }],
						[{ text: '–ù–µ—Ç, –∏—Å–ø—Ä–∞–≤–∏—Ç—å', callback_data: 'edit_order' }],
					],
				},
			})
		}
	}
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –¥–∞–Ω–Ω—ã—Ö (–∫–Ω–æ–ø–∫–∏)
bot.on('callback_query', async query => {
	const chatId = query.message.chat.id
	const action = query.data

	if (action === 'confirm_order') {
		userStates[chatId].step = 'waitingForAddress'
		await bot.sendMessage(
			chatId,
			'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏.',
			{ reply_markup: { remove_keyboard: true } }
		)
	} else if (action === 'edit_order') {
		userStates[chatId].step = 'chooseModel'
		await sendKeyboard(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:', [
			['‚≠êÔ∏è iphone 11', '‚≠êÔ∏è iphone 12'],
			['‚≠êÔ∏è iphone 13', '‚≠êÔ∏è iphone 14'],
			['‚≠êÔ∏è iphone 15', '‚≠êÔ∏è iphone 16'],
		])
	}
})

/// –®–∞–≥ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞
bot.on('message', async msg => {
	const { text, chat } = msg
	const chatId = chat.id

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥—Ä–µ—Å
	if (userStates[chatId]?.step === 'waitingForAddress') {
		userStates[chatId].address = text // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å
		userStates[chatId].step = 'waitingForWish' // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º

		await bot.sendMessage(
			chatId,
			'–°–ø–∞—Å–∏–±–æ –∑–∞ –∞–¥—Ä–µ—Å! –¢–µ–ø–µ—Ä—å, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ –∑–∞–∫–∞–∑—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –∏–ª–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏), –Ω–∞–ø–∏—à–∏—Ç–µ –∏—Ö –Ω–∏–∂–µ.'
		)
		return
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–∂–µ–ª–∞–Ω–∏—è
	if (userStates[chatId]?.step === 'waitingForWish') {
		userStates[chatId].wish = text // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∂–µ–ª–∞–Ω–∏—è
		userStates[chatId].step = 'waitingForContact' // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∑–∞–ø—Ä–æ—Å—É –∫–æ–Ω—Ç–∞–∫—Ç–∞

		await bot.sendMessage(
			chatId,
			`–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∂–µ–ª–∞–Ω–∏—è: "${text}". –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.`,
			{
				reply_markup: {
					keyboard: [
						[{ text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –∫–æ–Ω—Ç–∞–∫—Ç', request_contact: true }],
						['üîô –ù–∞–∑–∞–¥'],
					],
					one_time_keyboard: true,
					remove_keyboard: true, // –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –ø–æ–∂–µ–ª–∞–Ω–∏–π
				},
			}
		)
		return
	}
})

bot.on('contact', async msg => {
	const chatId = msg.chat.id
	const contact = msg.contact

	if (contact) {
		const phoneNumber = contact.phone_number
		const userName = msg.from.username || '–ù–µ —É–∫–∞–∑–∞–Ω–æ' // –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

		if (!userStates[chatId]) {
			userStates[chatId] = {}
		}
		userStates[chatId].contact = phoneNumber // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
		// –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
		userStates[chatId].contactUsername = userName // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

		// –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞
		const {
			version,
			capacity,
			color,
			address,
			wish,
			contact: userContact,
			contactUsername,
		} = userStates[chatId]
		const resultMessage = `
      –í–∞—à –∑–∞–∫–∞–∑:
      –í–µ—Ä—Å–∏—è: ${version}
      –û–±—ä–µ–º –ø–∞–º—è—Ç–∏: ${capacity}
      –¶–≤–µ—Ç: ${color}
      –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: ${address}
      –ü–æ–∂–µ–ª–∞–Ω–∏—è: ${wish}
      –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä: ${userContact}
      –ù–∏–∫ –≤ Telegram: @${contactUsername}
    `

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–∫–∞–∑–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		await bot.sendMessage(chatId, `üì± ${resultMessage}`, { parse_mode: 'HTML' })

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º
		for (const id of recipientChatIds) {
			const messageWithTitle = `üß∞\n–ù–æ–≤—ã–π –∑–∞–∫–∞–∑\nüß∞\n\n${resultMessage}`
			await bot.sendMessage(id, messageWithTitle, { parse_mode: 'HTML' })
		}

		// –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–∫–∞–∑–∞
		await bot.sendMessage(
			chatId,
			'–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.'
		)
		delete userStates[chatId] // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	}
})
bot.on('message', async msg => {
	const { text, chat } = msg
	const chatId = chat.id

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ userStates[chatId]
	if (!userStates[chatId]) {
		userStates[chatId] = {} // –ï—Å–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
	}

	const step = userStates[chatId]?.step
	if (step === 'waitingForQuestion') {
		// –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞, –∞ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		if (text && !text.startsWith('/')) {
			// –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			const userName = msg.from.username || '–ù–µ —É–∫–∞–∑–∞–Ω–æ' // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏–∫–∞, —Å—Ç–∞–≤–∏–º "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

			// –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –≤–æ–ø—Ä–æ—Å–æ–º
			const questionMessage = `‚ùì –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${userName} (${chatId}):\n\n${text}`

			// –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –≤–æ–ø—Ä–æ—Å –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
			for (const id of recipientChatIds) {
				await bot.sendMessage(id, questionMessage)
			}

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
			await bot.sendMessage(
				chatId,
				'–í–∞—à –≤–æ–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞—à–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º! –ú—ã —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –Ω–µ–≥–æ. üèÜ'
			)

			// –ó–∞–≤–µ—Ä—à–∞–µ–º —à–∞–≥
			userStates[chatId].step = null // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		}
	}
})
